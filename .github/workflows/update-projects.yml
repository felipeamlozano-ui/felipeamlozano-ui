name: Atualizar projetos recentes no README

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *' # roda a cada 12 horas (opcional)
  push:
    branches:
      - main

# Permiss√µes necess√°rias para escrever no README
permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar reposit√≥rio
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Buscar 3 reposit√≥rios mais recentes e atualizar README
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const username = 'felipeamlozano-ui';
            // Pega os 3 reposit√≥rios mais recentemente atualizados
            const { data: repos } = await github.rest.repos.listForUser({
              username,
              sort: 'updated',
              direction: 'desc',
              per_page: 3
            });

            const fs = require('fs');
            const path = 'README.md';

            if (!fs.existsSync(path)) {
              throw new Error('README.md n√£o encontrado no reposit√≥rio (coloque o README na raiz).');
            }

            let readme = fs.readFileSync(path, 'utf8');

            const projectsSection = `## üíª Meus Projetos Recentes\n\n<!-- start-projects -->\n\n${repos.map(repo => `### üîπ [${repo.name}](${repo.html_url})\n${repo.description ? repo.description : '_Sem descri√ß√£o ainda._'}\n![Preview](https://opengraph.githubassets.com/1/${repo.full_name})\n`).join('\n')}\n<!-- end-projects -->\n`;

            if (readme.includes('<!-- start-projects -->') && readme.includes('<!-- end-projects -->')) {
              const startIndex = readme.indexOf('<!-- start-projects -->');
              const endIndex = readme.indexOf('<!-- end-projects -->', startIndex) + '<!-- end-projects -->'.length;
              const newReadme = readme.slice(0, startIndex) + projectsSection + readme.slice(endIndex);
              if (newReadme !== readme) {
                fs.writeFileSync(path, newReadme, 'utf8');
                console.log('README atualizado com os √∫ltimos projetos.');
              } else {
                console.log('Nenhuma altera√ß√£o necess√°ria no README.');
              }
            } else {
              // Se os marcadores n√£o existirem, adiciona a se√ß√£o no final
              readme += '\n\n' + projectsSection;
              fs.writeFileSync(path, readme, 'utf8');
              console.log('Marcadores n√£o encontrados ‚Äî adicionado se√ß√£o no final do README.');
            }

      - name: Commitar e enviar altera√ß√µes (se houver)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          if git diff --cached --quiet; then
            echo "Sem altera√ß√µes para commitar"
          else
            git commit -m "üîÑ Atualiza√ß√£o autom√°tica dos √∫ltimos projetos"
            git push
          fi
